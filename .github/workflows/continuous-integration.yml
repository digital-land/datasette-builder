name: Continuous Integration
on:
  push:
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2
    - name: Install spatialite
      run: |
        sudo apt-get update
        sudo apt-get install sqlite3 libsqlite3-mod-spatialite
        sudo dpkg -L libsqlite3-mod-spatialite
    - name: Build and Install tippecanoe
      run: |
        git clone https://github.com/mapbox/tippecanoe.git
        cd tippecanoe
        sudo make -j
        sudo make install
        cd ..
    - name: Make makerules
      run: |
        make makerules
    - name: Make Init
      run: |
        make init
    - name: Lint, Test, Coverage
      run: |
        make test
        make lint
    - name: Collect
      run: |
        make collect
    - name: Build Docker
      run: |
        make build
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Push
      run: |
        make push
    - name: Sleep for 30 seconds
      uses: jakejarvis/wait-action@master
      with:
        time: '30s'
    - name: Deploy
      run: |
        aws elasticbeanstalk update-environment --application-name datasette-aws-entity-v2 --environment-name Datasetteawsentityv2-env --version-label datasette-aws-entity-v2-source-1
        # aws elasticbeanstalk update-environment --application-name datasette-tile-server --environment-name Datasettetileserver-env --version-label datasette-tile-server-source-2
    - name: Docker images
      run: |
        docker images
    - name: Docker ps
      run: |
        docker ps -a
        
