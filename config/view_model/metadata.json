{
    "plugins": {
        "datasette-cors": {
            "host_wildcards": ["*"]
        },
        "datasette-leaflet-geojson": {
            "default_maps_to_load": 3
        }
    },
    "databases": {
        "view_model": {
            "tables": {
                "geography": {
                    "size": 10
                },
                "slug": {
                    "label_column": "slug"
                }
            },
            "queries": {
                "point_geography": {
                    "sql": "SELECT geography, name, geometry FROM geography WHERE geometry IS NOT NULL AND WITHIN(GeomFromText('POINT(' || :longitude || ' ' || :latitude || ')'), geom)",
                    "title": "Geographies that encompass a point"
                },
                "bounded_geography_old": {
                    "sql": "SELECT * FROM geography WHERE geography.rowid in (SELECT pkid FROM idx_geography_geom WHERE (xmin < :bbox_maxx AND xmax > :bbox_minx) AND (ymin < :bbox_maxy AND ymax > :bbox_miny))",
                    "title": "Geographies inside bounding box (old)"
                },
                "bounded_geography": {
                    "sql": "SELECT geojson_simple FROM geography_geom WHERE geography_geom.rowid in (SELECT pkid FROM idx_geography_geom_geom WHERE (xmin < :bbox_maxx AND xmax > :bbox_minx) AND (ymin < :bbox_maxy AND ymax > :bbox_miny))",
                    "title": "Geographies inside bounding box"
                },
                "bounded_geography_simplified": {
                    "sql": "SELECT geojson_simple FROM geography_geom WHERE geography_geom.rowid in (SELECT pkid FROM idx_geography_geom_geom WHERE (xmin < :bbox_maxx AND xmax > :bbox_minx) AND (ymin < :bbox_maxy AND ymax > :bbox_miny))",
                    "title": "Geographies inside bounding box (simplified)"
                },
                "bounded_geography_simplified_paged": {
                    "sql": "SELECT geojson_simple AS geojson FROM geography_geom WHERE geography_geom.rowid > :after AND geography_geom.rowid in (SELECT pkid FROM idx_geography_geom_geom WHERE (xmin < :bbox_maxx AND xmax > :bbox_minx) AND (ymin < :bbox_maxy AND ymax > :bbox_miny)) ORDER BY rowid limit 100",
                    "title": "Geographies inside bounding box (simplified) page size 100"
                },
                "bounded_geography_full_paged": {
                    "sql": "SELECT geojson_full AS geojson FROM geography_geom WHERE geography_geom.rowid > :after AND geography_geom.rowid in (SELECT pkid FROM idx_geography_geom_geom WHERE (xmin < :bbox_maxx AND xmax > :bbox_minx) AND (ymin < :bbox_maxy AND ymax > :bbox_miny)) ORDER BY rowid limit 100",
                    "title": "Geographies inside bounding box (full) page size 100"
                },
                "bounded_geography_simplified_paged_by_type": {
                    "sql": "SELECT geojson_simple AS geojson FROM geography_geom WHERE geography_geom.rowid > :after AND geography_geom.type = :type AND geography_geom.rowid in (SELECT pkid FROM idx_geography_geom_geom WHERE (xmin < :bbox_maxx AND xmax > :bbox_minx) AND (ymin < :bbox_maxy AND ymax > :bbox_miny)) ORDER BY rowid limit 100",
                    "title": "Geographies inside bounding box (simplified) page size 100 by type"
                },
                "bounded_geography_full_paged_by_type": {
                    "sql": "SELECT geojson_full AS geojson FROM geography_geom WHERE geography_geom.rowid > :after AND geography_geom.type = :type AND geography_geom.rowid in (SELECT pkid FROM idx_geography_geom_geom WHERE (xmin < :bbox_maxx AND xmax > :bbox_minx) AND (ymin < :bbox_maxy AND ymax > :bbox_miny)) ORDER BY rowid limit 100",
                    "title": "Geographies inside bounding box (full) page size 100 by type"
                },
                "bounded_geography_brownfield_land": {
                    "sql": "SELECT json_insert(gg.geojson_full, '$.properties.hectares', (select m.value from metric as m join geography_metric gm on m.rowid = gm.metric_id where gm.geography_id = gg.rowid and m.field='hectares')) AS geojson FROM geography_geom AS gg WHERE gg.rowid > :after AND gg.type = :type AND Within(gg.geom_point, BuildMbr(CAST(:bbox_minx AS DOUBLE), CAST(:bbox_miny AS DOUBLE), CAST(:bbox_maxx AS DOUBLE), CAST(:bbox_maxy AS DOUBLE), 4326)) ORDER BY rowid limit 100",
                    "title": "Points inside bounding box page size 100 BFL"
                },
                "geography_datasets_for_organisation" : {
                    "sql": "SELECT DISTINCT geography.type FROM geography INNER JOIN organisation_geography ON organisation_geography.geography_id = geography.id INNER JOIN organisation ON organisation_geography.organisation_id = organisation.id WHERE organisation.organisation = :organisation",
                    "title": "Geography datasets corresponding to an organisation"
                },
                "typology_geography_by_slug": {
                    "sql": "SELECT g.*, gg.geojson_full, GROUP_CONCAT(o.organisation, ';') AS organisations FROM geography AS g INNER JOIN geography_geom AS gg ON g.rowid = gg.rowid INNER JOIN slug AS s ON s.rowid = g.slug_id INNER JOIN organisation_geography AS og ON g.rowid = og.geography_id INNER JOIN organisation AS o ON o.rowid = og.organisation_id WHERE s.slug = :slug",
                    "title": "Get complete geography entity by slug"
                }
            }
        },
        "development-plan-document": {
            "tables": {
                "entry": {
                    "label_column": "entity"
                },
                "fact": {
                    "label_column": "attribute"
                }
            }
        }
    }
}
